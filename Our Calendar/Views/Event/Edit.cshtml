@model Our_Calendar.Models.EventVModel

@{
    ViewBag.Title = "Edit Event - Our Calendar App";
}

<h2>Edit Event</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/bootstrap-datepicker.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(function() {
        var fmt = typeof dateFormat !== 'undefined' ? dateFormat : "mm/dd/yyyy";
        $('.date').datepicker({
            orientation: "bottom auto",
            format: fmt
        });
        $(".date span").click(function () {
            $(this).prev("input").focus();
        });
    });    
</script>

@using (Html.BeginForm("Add", "Event", FormMethod.Post, new { @class = "clearfix", enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)
    <div class="col-sm-4 col-sm-offset-4">
    <fieldset>
        <legend></legend>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserID)
            @Html.ValidationMessageFor(model => model.UserID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EventID)
            @Html.ValidationMessageFor(model => model.EventID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EventName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EventName)
            @Html.ValidationMessageFor(model => model.EventName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EventDate)
        </div>

        <div class="editor-field">
            <span class="input-group date">
                <input data-val="true" data-val-required="The Date of Event field is required." id="EventDate" name="EventDate" class="form-control" value="@Model.EventDate.ToString("MMMM dd, yyyy")">
                <span class="input-group-addon add-on"><img class="calendar" src="@Url.Content("~/Content/Images/calendar.png")"></span>
            </span>
            @Html.ValidationMessageFor(model => model.EventDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EventTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EventTime)
            @Html.ValidationMessageFor(model => model.EventTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EventLocation)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EventLocation)
            @Html.ValidationMessageFor(model => model.EventLocation)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FullDesc)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FullDesc)
            @Html.ValidationMessageFor(model => model.FullDesc)
        </div>
        
        @if (Model.EventImage != null)
        {
            <div>
                <br/><br/>
                <img src="/uploads/@Model.EventImage" class="img-responsive"/>
            </div>
            <div class="editor-label">
                <label for="file">Choose a Different Logo/Image</label>
            </div>
        }
        else
        {
            <div class="editor-label">
                <label for="file">Event Logo/Image</label>
            </div>
        }
        
        <input type="hidden" id="EventImage" name="EventImage" value="@Model.EventImage"/>
        <div class="editor-field">
             <input type="file" name="file" id="file" />
        </div>

        <div class="text-right submit-button">
            <input class="btn btn-success" type="submit" value="Save Event" />
            <br/><br/>
        </div>
    </fieldset>
</div>
}